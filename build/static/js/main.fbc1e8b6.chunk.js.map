{"version":3,"sources":["Components/NavBar/navbar.module.css","Containers/Signin/signin.module.css","Containers/Signup/signup.module.css","Components/Logo/index.tsx","config.ts","Utils/utils.ts","Components/NavBar/index.tsx","Components/LazyImage.tsx","Containers/Home/index.tsx","Containers/Vote/index.tsx","Containers/Create/OptionField.tsx","Containers/Create/index.tsx","Containers/Signin/index.tsx","Containers/Signup/index.tsx","Containers/Dashboard/PollDetails.tsx","Containers/Dashboard/MyPolls.tsx","Containers/Dashboard/index.tsx","App.tsx","index.tsx","Containers/Dashboard/dashboard.module.css","Containers/Vote/vote.module.css","Containers/Create/create.module.css","Containers/Home/home.module.css","Components/Logo/styles.module.css"],"names":["module","exports","Logo","className","styles","React","Component","SERVER_URL","primary_color","secondary_color","Is_Auth","QUESTION_KEY","POLL_KEY","getSavedQuestionId","id","localStorage","getItem","undefined","getQuestionData","Promise","res","rej","fetch","method","credentials","mode","then","fetch_res","catch","err","timeAgo","prevDate","ms","Date","getTime","seconds","Math","floor","minutes","hours","days","weeks","months","years","setIsAuth","is_auth","setItem","removeItem","getIsAuth","Navbar","useState","window","innerWidth","width","setWidth","menu_open","setMenuOpen","addEventListener","menu","useRef","AppBar","sx","backgroundColor","maxWidth","Toolbar","Stack","direction","justifyContent","alignItems","IconButton","borderRadius","onClick","location","href","Typography","marginLeft","variant","color","fontFamily","fontWeight","letterSpacing","spacing","font","style","textDecoration","pathname","includes","Button","textTransform","size","ref","e","LazyImage","src","placeHolder","alt","onLoadCallBack","currentImg","setCurrentImg","useEffect","setOriginalImage","originalImg","Image","onload","loading","Home","props","toggleJoinPopup","setState","show_join_poll_popup","state","joinPoll","input","document","getElementById","value","length","status","json","data","question_id","history","push","invalid_poll_id","container","text","svg","innerHTML","fontSize","this","Dialog","open","onClose","padding","textAlign","TextField","error","type","autoFocus","onKeyDown","keyCode","key","Vote","poll_id","fetchUpdatePollData","res_json","poll_data","data_loaded","vote","option_index","onInValidQuestionId","vote_option","show_alert","alert_severity","alert_text","alert_title","console","log","is_already_voted","updated_poll_data","options","no_of_polls","total_votes","URLSearchParams","search","get","Slide","in","mountOnEnter","unmountOnExit","Alert","severity","height","alignSelf","title","question_title","question","created_by","created_time","map","opt","i","per","css_var","zIndex","option","disabled","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cursor","navigator","clipboard","writeText","origin","userAgent","mobiles","match","isMobile","link","cx","cy","r","DialogTitle","DialogContent","DialogContentText","DialogActions","Container","position","top","left","transform","display","flexDirection","CircularProgress","OptionField","onChange","onDelete","setOpen","empty","setempty","_onChange","index","target","repeat","anchorEl","label","spellCheck","placeholder","InputProps","startAdornment","InputAdornment","MoreVert","Popover","anchorOrigin","vertical","horizontal","transformOrigin","List","bgcolor","component","subheader","ListSubheader","ListItem","ListItemButton","ListItemIcon","DeleteOutlined","ListItemText","primary","Create","addNewOptionField","no_of_options","deleteOption","open_snackbar","snackbar_msg","snack_bar_severity","splice","getOptionFields","arr","forEach","updateOptionsValues","onConfirm","description","question_description","no_question_error","focus","no_title_error","submit_loading","headers","body","JSON","stringify","sendQuestionData","expire_at","expire_date","show_success_dialog","open_advance_settings","window_width","required","maxRows","rows","multiline","alignContent","Tooltip","Add","p","marginTop","ExpandLess","ExpandMore","Collapse","LocalizationProvider","dateAdapter","AdapterDateFns","DesktopDateTimePicker","minDateTime","new_date","renderInput","params","MobileDateTimePicker","startIcon","SaveOutlined","Snackbar","translate","autoHideDuration","Signin","user_name","setUserName","password","setPassword","retyped_password","setRetypedPassword","openAlert","setOpenAlert","setAlertSeverity","setAlertText","setAlertTitle","user_name_field_error","setUserNameFieldError","password_field_error","setPasswordFieldError","retyped_password_field_error","setRetypedPasswordFieldError","validFields","username","msg","Signup","PollDetails","ctx","canvas","chart","updateCanvas","destroy","grd","createLinearGradient","addColorStop","config","labels","datasets","maintainAspectRatio","responsive","plugins","align","legend","scales","yAxes","grid","drawBorder","ticks","xAxes","Chart","show_description","getContext","MyPolls","displayNoPollsImage","a","div","pollStatusTableData","questions_data","expired","active","dataAttributes","poll_details_index","show_poll_details","no_of_visits","open_poll_search","xp","total_created_polls","total_visits","selected_poll","is_loading","element","App","theme","createTheme","palette","main","secondary","handleFontSize","documentElement","toString","setAuth","path","exact","SignIn","SignUp","Dashboard","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fbc1e8b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"links-container\":\"navbar_links-container__YEkT3\",\"menu\":\"navbar_menu__2TCgy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"signin_container__7pokD\",\"wrapper\":\"signin_wrapper__1xg3Z\",\"icon\":\"signin_icon__YW39M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"signup_container__27ceJ\",\"wrapper\":\"signup_wrapper__34jtt\",\"icon\":\"signup_icon__3Hj4F\"};","import React from \"react\";\nimport styles from './styles.module.css';\n\nexport default class Logo extends React.Component {\n    \n    render(): React.ReactNode {\n        return (\n            <div className={styles['logo']}>\n                <div className={styles['container']}>\n                    <div className={styles['bar-1']} ></div>\n                    <div className={styles['bar-2']} ></div>\n                    <div className={styles['bar-3']} ></div>\n                </div>\n            </div>\n        )\n    }\n}\n","export const SERVER_URL = 'http://localhost:5000'\n\nexport const Min_Percentage_of_FontSize = 75;\nexport const primary_color = '#9C19E0';\nexport const secondary_color='#670FF7';\n","import { SERVER_URL } from \"../config\";\n\n// ? Local storage keys\nconst Is_Auth = 'is_auth'\n\nconst QUESTION_KEY = 'QUESTION_ID';\nconst POLL_KEY = 'POLL_KEY'\n\nexport const saveQuestionId = (id: string) => {\n    localStorage.removeItem(QUESTION_KEY);\n    localStorage.setItem(QUESTION_KEY, id);\n}\nexport const getSavedQuestionId = () => {\n    let id = localStorage.getItem(QUESTION_KEY);\n    return id ? id : undefined;\n}\n\n\nexport const savePollId = (id: string) => {\n    localStorage.removeItem(POLL_KEY);\n    localStorage.setItem(POLL_KEY, id);\n}\nexport const getSavedPollId = () => {\n    let id = localStorage.getItem(POLL_KEY);\n    return id ? id : undefined;\n}\n\nexport const sendQuestionData = (data: { options: string[], question: string }): Promise<any> => {\n\n    return new Promise((res, rej) => {\n        try {\n            fetch(`${SERVER_URL}/create`, { method: \"POST\", mode: 'cors', headers: { 'Content-Type': 'application/json' },credentials:'include', body: JSON.stringify(data) }).then(fetch_res => {\n                fetch_res.json().then(res_json => { res(res_json); });\n            }).catch(err => rej(err));\n        } catch (err) { rej(err); }\n    })\n\n}\n\nexport const getQuestionData = (id: string): Promise<Response> => {\n    return new Promise(function (res, rej) {\n        try {\n            fetch(`${SERVER_URL}/fetch_poll?id=${id}`, { method: \"GET\",credentials:'include', mode: 'cors' }).then(fetch_res => {\n                res(fetch_res);\n            }).catch(err => rej(err));\n        } catch (err) { rej(err); }\n    })\n}\n\nexport function vote(question_id: string, option_index: number, onInValidQuestionId?: Function): Promise<Response> {\n    return new Promise(function (res, rej) {\n        try {\n            fetch(`${SERVER_URL}/vote?question_id=${question_id}&option_index=${option_index}`,\n                { method: \"GET\", mode: 'cors',credentials:'include' })\n                .then(fetch_res => {\n                    res(fetch_res);\n                }).catch(\n                    err => {\n                        if (!err) {\n                            rej(); return\n                        };\n                        if (onInValidQuestionId) onInValidQuestionId();\n                        rej(err);\n                    });\n        }\n        catch (err) { rej(err) }\n    })\n}\nexport function check_vote(question_id: string): Promise<Response> {\n    return new Promise((res, rej) => {\n        try {\n            fetch(`${SERVER_URL}/check_vote`, { method: 'POST', mode: 'cors',credentials:'include', body: JSON.stringify({ question_id }) }).then(fetch_res => {\n                res(fetch_res);\n            }).catch(err => rej(err))\n        } catch (err) { rej(err); }\n    })\n}\n\nexport const timeAgo = (prevDate: Date): string => {\n    const ms = new Date().getTime() - prevDate.getTime();\n    const seconds = Math.floor(ms / 1000);\n\n    if (seconds < 2) { return \"a moment ago\"; };\n    if (seconds < 5) { return \"few moments ago\"; };\n    if (seconds < 60) { return `${seconds} seconds ago.`; };\n    const minutes = Math.floor(seconds / 60);\n    if (minutes < 60) {\n        if (minutes === 1) {\n            return `${minutes} minute ago`;\n        }\n        return `${minutes} minutes ago`;\n    };\n    const hours = Math.floor(minutes / 60);\n    if (hours < 24) {\n        if (hours === 1) {\n            return `${hours} hour ago`\n        }\n        return `${hours} hours ago`\n    }\n    const days = Math.floor(hours / 24);\n    if (days < 7) {\n        if (days === 1) { return `${days} day ago` }\n        return `${days} days ago`\n    }\n    const weeks = Math.floor(days / 7);\n    if (days < 30) {\n        if (weeks === 1) { return `${weeks} week ago` }\n        return `${weeks} weeks ago`\n    }\n    const months = Math.floor(days / 30);\n    if (months < 12) {\n        if (months === 1) {\n            return `${months} month ago`\n        }\n        return `${months} months ago`\n    }\n    const years = Math.floor(months / 12);\n    if (years === 1) {\n        return `${years} year ago`;\n    }\n    return `${years} years ago`;\n}\n\nexport function isMobile() {\n    let userAgent = navigator.userAgent;\n    let mobiles = ['Android', 'BlackBerry', 'iPhone', \"iPad\", \"iPod\", \"Opera Mini\", \"IEMobile\"]\n    for (let i = 0; i < mobiles.length; i++) {\n        if (userAgent.match(mobiles[i])) {\n            return true;\n        }\n    }\n    return false;\n\n};\n\nexport function setIsAuth(is_auth: boolean) {\n    if (is_auth) {\n        localStorage.setItem(Is_Auth, `${is_auth}`); return\n    }\n    localStorage.removeItem(Is_Auth);return;\n}\nexport function getIsAuth() {\n    return localStorage.getItem(Is_Auth) ? true : false;\n}\n","import { AppBar, Toolbar, IconButton, Typography, Stack, Button } from '@mui/material'\nimport { useRef, useState } from 'react'\nimport styles from './navbar.module.css';\nimport Logo from '../Logo/index'\nimport { getIsAuth } from '../../Utils/utils';\n\nexport default function Navbar() {\n    const [width, setWidth] = useState(window.innerWidth);\n    const [menu_open, setMenuOpen] = useState(false);\n    window.addEventListener('resize', function () {\n        setWidth(window.innerWidth);\n    })\n    const menu = useRef<HTMLDivElement>(null);\n\n    return (\n        <>\n            <AppBar sx={{ backgroundColor: '#ffff', maxWidth: '100vw' }} >\n                <Toolbar >\n                    <Stack direction={'row'} justifyContent={'space-between'} width='100%' alignItems={'center'} >\n                        <IconButton sx={{ borderRadius: '10px' }} onClick={()=>{window.location.href = '/'}}>\n                            <Logo />\n                            <Typography sx={{ marginLeft: '0.3rem' }} variant='h6' color={'primary'} fontFamily='Poppins, sans-serif' fontWeight={'bolder'} letterSpacing={'1px'}>Live poll</Typography>\n                        </IconButton>\n                        {width > 780 &&\n                            <Stack\n                                className={styles['links-container']}\n                                direction={'row'}\n                                justifyContent={'space-between'}\n                                alignItems={'center'} spacing={3}>\n                                <Typography sx={{ font: 'inherit' }} variant='body1'>\n                                    <a href={'/create'} style={{ color: 'inherit', textDecoration: 'none', font: 'inherit' }}>\n                                        Create\n                                    </a>\n                                </Typography>\n                                <Typography sx={{ font: 'inherit' }} variant='body1'>\n                                    <a href={'/#'} style={{ color: 'inherit', textDecoration: 'none', font: 'inherit' }}>\n                                        Explore\n                                    </a>\n                                </Typography>\n                                {(getIsAuth() && !window.location.pathname.includes('dashboard') )&&\n                                    <Typography sx={{ font: 'inherit' }} variant='body1'>\n                                        <a href={'/dashboard'} style={{ color: 'inherit', textDecoration: 'none', font: 'inherit' }}>\n                                            Dashboard\n                                        </a>\n                                    </Typography>}\n                                {!getIsAuth() &&\n                                    <Stack direction={'row'} justifyContent={'space-between'} alignItems={'center'} spacing={4} sx={{ marginLeft: '500px' }}>\n                                        <Typography sx={{ font: 'inherit' }} variant='body1'>\n                                            <a href={'/signup'} style={{ color: 'inherit', textDecoration: 'none', font: 'inherit' }}>\n                                                Sign up\n                                            </a>\n                                        </Typography>\n                                        <Button href='#' onClick={() => { window.location.href = '/signin' }} variant='contained' sx={{ textTransform: 'none' }} size='small'>Sign in</Button>\n                                    </Stack>\n                                }\n                            </Stack>\n                        }\n                        {\n                            width <= 780 &&\n                            <Stack\n                                id='nav-bar'\n                                data-open={menu_open}\n                                className={styles['links-container']}\n                                direction={'column'}\n                                justifyContent={'space-between'}\n                                ref={menu}\n                                alignItems={'flex-start'} spacing={1.5}>\n                                <Typography sx={{ font: 'inherit', marginLeft: '0.3rem' }} variant='body1'>\n                                    <a href={'/create'} style={{ color: 'inherit', textDecoration: 'none', font: 'inherit' }}>\n                                        Create\n                                    </a>\n                                </Typography>\n                                <span ></span>\n                                <Typography sx={{ font: 'inherit' }} variant='body1'>\n                                    <a href={'/#'} style={{ color: 'inherit', textDecoration: 'none', font: 'inherit' }}>\n                                        Explore\n                                    </a>\n                                </Typography>\n                                <span ></span>\n\n                                {(getIsAuth() && !window.location.pathname.includes('dashboard') ) &&\n                                    <Typography sx={{ font: 'inherit' }} variant='body1'>\n                                        <a href={'/dashboard'} style={{ color: 'inherit', textDecoration: 'none', font: 'inherit' }}>\n                                            Dashboard\n                                        </a>\n                                    </Typography>\n                                }\n                                {!getIsAuth() &&\n                                    <>\n                                        <Typography sx={{ font: 'inherit' }} variant='body1'>\n                                            <a href={'/signup'} style={{ color: 'inherit', textDecoration: 'none', font: 'inherit' }}>\n                                                Sign Up\n                                            </a>\n                                        </Typography>\n                                        <span ></span>\n                                        <Button\n                                            variant='contained'\n                                            onClick={() => { window.location.href = '/signin' }}\n                                            sx={{ textTransform: 'none' }} size='small'>\n                                            Sign In\n                                        </Button>\n                                    </>\n                                }\n                            </Stack>\n                        }\n                        <div className={styles['menu']} id='menu' data-open={menu_open} onClick={(e) => {\n                            if (menu_open) {\n                                setMenuOpen(false); return\n                            } setMenuOpen(true); return\n                        }\n                        }>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                        </div>\n                    </Stack>\n                </Toolbar>\n            </AppBar>\n        </>\n    )\n}\n","\n  \nimport React, { useState } from 'react';\n\nconst LazyImage = (\n    { className, src, placeHolder, alt, onClick, onLoadCallBack }:\n    { src:string, alt:string,  className?:string, placeHolder?:string,onClick?:Function, onLoadCallBack?:Function ,}\n    ) => {\n\n    const [currentImg, setCurrentImg] = useState(placeHolder);\n    if (!currentImg) {setCurrentImg(src);}\n    React.useEffect(() => {\n        setOriginalImage()\n    });\n\n    const setOriginalImage = () => {\n        let originalImg = new Image();\n        originalImg.onload = () => {\n            setCurrentImg(src);\n            if (onLoadCallBack) {\n                onLoadCallBack();\n            }\n        };\n        originalImg.src = src;\n    }\n\n\n    return (\n        <img\n            className={className ? className : ''}\n            src={currentImg} alt={alt}\n            loading='lazy'\n            onClick={()=>{if(onClick)onClick();}}\n\n        ></img>\n    )\n\n}\nexport default LazyImage;","import React from 'react';\nimport { Button, Stack, Dialog, TextField, Typography } from '@mui/material'\nimport NavBar from '../../Components/NavBar'\nimport { getQuestionData, savePollId } from '../../Utils/utils';\nimport styles from './home.module.css';\nimport LazyImage from '../../Components/LazyImage';\nimport './home.css'\ninterface StateProps {\n    show_join_poll_popup: boolean,\n    invalid_poll_id: boolean,\n\n}\nexport default class Home extends React.Component<{}, StateProps> {\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            show_join_poll_popup: false,\n            invalid_poll_id: false\n        }\n    }\n    toggleJoinPopup = () => {\n\n        this.setState({ show_join_poll_popup: !this.state.show_join_poll_popup });\n    }\n\n    joinPoll = () => {\n        let input = document.getElementById('join-id-input') as HTMLInputElement;\n        if (!(input && input.value)) return;\n        if (input.value.length > 10) return;\n        getQuestionData(input.value).then(res => {\n\n            if (res.status !== 200) {\n                this.setState({ invalid_poll_id: true }); return;\n            }\n            res.json().then(data => {\n                let props = this.props as any;\n                if (!data.question_id) return;\n                savePollId(data.question_id)\n                props.history.push(`/vote?id=${data.question_id}`)\n            })\n        })\n    }\n    componentDidMount() {\n        const container = document.getElementById('top-right-container');\n        if (container) {\n            fetch('media/illustrations/charts_illustration.svg').then(res => {\n                res.text().then(svg => {\n                    container.innerHTML += svg;\n                })\n            })\n        }\n    }\n    render(): React.ReactNode {\n\n        return (\n            <div >\n                <NavBar />\n\n                <div\n                    className={styles['container']}\n                >\n                    <div className={styles['top']}>\n                        <Stack\n                            className={styles['action-btns-container']}\n                            direction='row'\n                            alignItems={'center'}\n                            spacing={2}>\n                            <Stack className={styles['create-container']} spacing={2}>\n                                <LazyImage alt='create' src='media/images/create.png'></LazyImage>\n                                <p id='some'>\n                                    Create <b style={{ color: 'var(--primary)', letterSpacing: '1px', fontSize: 'inherit' }}>Live Polls</b> in no time.\n                                </p>\n                                <p>Simple and fast.</p>\n                                <Button size='medium' onClick={()=>{window.location.href='create'}} variant='contained' sx={{ textTransform: 'none', fontWeight: 'bold' }} >Create</Button>\n                            </Stack>\n                            <i color='primary'>OR</i>\n                            <Stack className={styles['join-container']} spacing={2}>\n                                <LazyImage alt='vote' src='media/images/vote.png'></LazyImage>\n                                <p >Vote to existing poll(s) created by others.</p>\n                                <p>By entering poll id.</p>\n                                <Button \n                                size='medium'\n                                onClick={()=>{this.setState({show_join_poll_popup:true})}} variant='contained' sx={{ textTransform: 'none', fontWeight: 'bold' }} >Join</Button>\n                            </Stack>\n                        </Stack>\n                        {window.innerWidth > 980 &&\n                            <div className={styles['top-right-image']} id='top-right-container'></div>\n                        }\n\n                    </div>\n                    <div className={styles['bottom']}>\n                        <Stack direction={'column'} alignItems={'center'}>\n                            <Typography variant='h4' sx={{ color: 'var(--font-color)' }}>Features</Typography>\n                            <Stack direction={'row'} className={styles['features-container']} alignItems={'center'} justifyContent={'center'}>\n                                <div>\n                                    <LazyImage src='media/images/free.png' alt='free' ></LazyImage>\n                                    <Typography variant='h5' color={'var(--font-color)'}>Free</Typography>\n                                    <span></span>\n                                    <p>Save money! All our polls are 100% free to create and monitor.</p>\n                                </div>\n                                <div>\n                                    <LazyImage src='media/images/clock.png' alt='clock' ></LazyImage>\n                                    <Typography variant='h5' color={'var(--font-color)'}>Real Time</Typography>\n                                    <span></span>\n                                    <p>All our polls are live and up to date. You can monitor your live polls with our any refreshing.</p>\n                                </div>\n                                <div>\n                                    <LazyImage src='media/images/shield.png' alt='shield' ></LazyImage>\n                                    <Typography variant='h5' color={'var(--font-color)'}>Safe & Secure</Typography>\n                                    <span></span>\n                                    <p>We use latest technology to prevent any type of malicious things.We also prevent duplicate votes.</p>\n                                </div>\n                            </Stack>\n                        </Stack>\n                    </div>\n                    {this.state.show_join_poll_popup &&\n\n                        <Dialog open maxWidth='md' onClose={this.toggleJoinPopup}>\n                            <Stack maxWidth='md' direction={'column'} sx={{ alignItems: 'center', padding: '15px' }}>\n                                <h1 style={{ textAlign: 'center' }}>Enter poll id.</h1>\n                                <p style={{ fontSize: '90%', textAlign: 'center' }}>To vote poll id is required.Ask the creator of poll for poll id.</p>\n                                <Stack direction={'row'} spacing={2} justifyContent={'space-between'} alignItems={'baseline'}>\n                                    <TextField\n                                        error={this.state.invalid_poll_id}\n                                        type={'text'}\n                                        id='join-id-input'\n                                        autoFocus\n                                        variant='standard'\n                                        onKeyDown={(e) => { if (e.keyCode === 13 || e.key === 'Enter' || e.key === 'enter') { this.joinPoll() } }} />\n                                    <Button size='large' variant='contained' onClick={this.joinPoll}>Join</Button>\n                                </Stack>\n                            </Stack>\n\n                        </Dialog>\n                    }\n                </div>\n            </div>\n        )\n    };\n}\n","import {\n    Dialog,\n    CircularProgress,\n    DialogTitle,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    Button,\n    Container,\n    Alert,\n    Slide\n} from \"@mui/material\";\nimport React from \"react\";\nimport Navbar from \"../../Components/NavBar\";\nimport { SERVER_URL } from \"../../config\";\nimport { getQuestionData, isMobile, timeAgo, vote as voteToQuestion } from \"../../Utils/utils\";\nimport styles from './vote.module.css';\ninterface StateProps {\n    data_loaded: boolean;\n    invalid_poll_id: boolean;\n    poll_data: any;\n    vote_option: number;\n    show_alert: boolean,\n    alert_severity: \"error\" | \"success\" | \"info\" | \"warning\";\n    alert_text: string;\n    alert_title: string\n}\n\nexport default class Vote extends React.Component<{}, StateProps> {\n    poll_id: string | null = null;\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            data_loaded: false,\n            invalid_poll_id: false,\n            poll_data: null,\n            alert_severity: 'info',\n            alert_text: '',\n            show_alert: false, alert_title: '', vote_option: -1\n        }\n\n    };\n    fetchUpdatePollData = () => {\n        if (!this.poll_id) return;\n        getQuestionData(this.poll_id).then(res => {\n            if (res.status !== 200) {\n                this.setState({ invalid_poll_id: true, data_loaded: true }); return\n            };\n            res.json().then(res_json => {\n                \n                this.setState({ poll_data: res_json, data_loaded: true });\n            })\n        })\n    }\n    componentDidMount() {\n        this.poll_id = new URLSearchParams(window.location.search).get('id');\n        if (!this.poll_id) {\n            window.location.href = '/home'\n            return;\n        }\n        this.fetchUpdatePollData();\n        fetch(`${SERVER_URL}/add_visit?question_id=${this.poll_id}`,{credentials:'include',mode:'cors',method:'GET'}).then(res=>console.log(res)).catch(err=>console.error(err))\n    }\n    vote = () => {\n        if (this.state.vote_option < 0 || !this.poll_id) return;\n        try {\n\n            voteToQuestion(\n                this.poll_id,\n                this.state.vote_option,\n                () => {\n                    this.setState({ show_alert: true, alert_severity: 'error', alert_text: 'This poll might be expired.', alert_title: 'Error!' }); return\n                })\n                .then(res => {\n                    console.log(res);\n                    res.json().then(res_json => {\n                        console.log(res_json);\n                        if (res_json.is_already_voted) {\n                            this.setState({ show_alert: true, alert_severity: 'error', alert_text: 'You had already voted to this poll.', alert_title: 'Duplicate vote!' });\n                            return;\n                        }\n                        let updated_poll_data = this.state.poll_data;\n                        updated_poll_data.options[this.state.vote_option].no_of_polls += 1;\n                        updated_poll_data.total_votes += 1;\n                        this.setState(\n                            {\n                                show_alert: true,\n                                alert_severity: 'success',\n                                alert_text: 'Your vote has been submitted.',\n                                alert_title: 'Success!', poll_data: updated_poll_data\n                            })\n                            ;\n                        this.fetchUpdatePollData();\n                    })\n\n                }).catch(err => { console.error(err) })\n        } catch (error) {\n\n        }\n\n    }\n    render(): React.ReactNode {\n        return (\n\n            <div className={styles['container']}>\n                <Navbar />\n                <div className={styles['wrapper']}>\n                    {\n                        (this.state.data_loaded && this.state.poll_data) &&\n                        <>\n                            <div className={styles['left']} >\n                                <Slide direction=\"right\" in={this.state.show_alert} mountOnEnter unmountOnExit >\n                                    <Alert className={styles['alert']}\n                                        severity={this.state.alert_severity}\n                                        sx={{ width: '100%', height: '100%', alignSelf: 'center' }}\n                                        title={this.state.alert_title}\n                                    >\n                                        {this.state.alert_text}\n                                    </Alert>\n                                </Slide>\n                                <p className={styles['title']}>{this.state.poll_data.question_title}</p>\n                                <div className={styles['question']}>\n                                    <p>{this.state.poll_data.question}</p>\n                                    <p>Asked by <b>{this.state.poll_data.created_by ?? 'Guest'} </b>{timeAgo(new Date(this.state.poll_data.created_time))}</p>\n                                </div>\n                                <div className={styles['options-container']}>\n                                    {\n                                        this.state.poll_data.options.map((opt: any, i: number) => {\n                                            let per = (opt.no_of_polls / this.state.poll_data.total_votes) * 100;\n                                            if (!per) { per = 0 }\n                                            let css_var = { \"--percentage\": `${per}%` } as React.CSSProperties;\n                                            return (\n                                                <div\n                                                    className={styles['option']}\n                                                    key={i}\n                                                    style={{ zIndex: 10 }}\n                                                    onClick={() => { this.setState({ vote_option: i }) }}\n                                                    data-selected={this.state.vote_option === i ? true : false}\n                                                >\n                                                    <div className={styles['option-top']} >\n                                                        <p>{opt.option}</p>\n                                                        <p>{Math.floor(per)}%</p>\n                                                    </div>\n                                                    <div className={styles['option-bottom']}>\n                                                        <div className={styles['option-outerbar']}>\n                                                            <div className={styles['option-innerbar']} style={css_var}></div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            )\n                                        })}\n                                </div>\n                                <div className={styles['left-bottom-buttons']}>\n                                    <div>\n                                        <Button\n                                            size='medium'\n                                            disabled={this.state.vote_option < 0}\n                                            onClick={this.vote}\n                                            variant=\"contained\"\n                                            sx={{ width: 'fit-content' }} >Vote</Button>\n                                    </div>\n                                    <div >\n                                        <p>go to results</p>\n                                        <svg width=\"8\" height=\"10\" viewBox=\"0 0 10 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path d=\"M1.62646 1L8.62646 6L1.62646 11\" stroke=\"#5E5C76\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                        </svg>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className={styles['right']}>\n                                <div className={styles['right-top']}>\n                                    <p>Votes</p>\n                                    <p>{this.state.poll_data.total_votes}</p>\n                                </div>\n                                <span></span>\n                                <div className={styles['right-bottom']}>\n                                    <p>Share poll</p>\n                                    <div style={{ cursor: 'pointer' }} onClick={() => {\n                                        navigator.clipboard.writeText(`${window.location.origin}/vote?id=${this.poll_id}/`).then(() => {\n                                            this.setState({ show_alert: true, alert_severity: 'success', alert_text: 'Link has been copied to clipboard.', alert_title: 'Copied!' })\n                                        }).catch(() => {\n                                            this.setState({ show_alert: true, alert_severity: 'warning', alert_text: 'Unable to copy link to clipboard', alert_title: 'Error!' })\n                                        })\n\n                                    }}>\n                                        <svg width=\"27\" height=\"29\" viewBox=\"0 0 27 29\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path d=\"M10.9858 15.3171C11.5257 16.0689 12.2145 16.691 13.0054 17.1411C13.7964 17.5913 14.671 17.8589 15.57 17.926C16.469 17.9931 17.3713 17.858 18.2158 17.5298C19.0602 17.2017 19.8271 16.6882 20.4643 16.0242L24.2355 12.0958C25.3805 10.861 26.014 9.20712 25.9997 7.49043C25.9854 5.77374 25.3243 4.13159 24.159 2.91767C22.9936 1.70374 21.4171 1.01517 19.7691 1.00025C18.1211 0.98533 16.5334 1.64526 15.3479 2.83791L13.1857 5.0771\" stroke=\"#9C19E0\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                            <path d=\"M16.0141 12.6982C15.4742 11.9464 14.7855 11.3244 13.9945 10.8742C13.2036 10.4241 12.3289 10.1564 11.4299 10.0893C10.5309 10.0223 9.62861 10.1574 8.78415 10.4855C7.93969 10.8136 7.17285 11.3271 6.53565 11.9911L2.7644 15.9195C1.61945 17.1543 0.985917 18.8082 1.00024 20.5249C1.01456 22.2416 1.67559 23.8837 2.84096 25.0977C4.00633 26.3116 5.5828 27.0002 7.23082 27.0151C8.87884 27.03 10.4665 26.3701 11.652 25.1774L13.8016 22.9382\" stroke=\"#9C19E0\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                        </svg>\n                                        <p>copy link</p>\n                                    </div>\n                                    <div onClick={() => {\n                                        if (isMobile()) {\n                                            let link = `${window.location.origin}/vote?id=${this.poll_id}/`\n                                            window.location.href = `whatsapp://send?text=${link}&phone=7995545283`;\n                                            return;\n                                        }\n                                        let link = `${window.location.origin}/vote?id=${this.poll_id}/`\n                                        window.location.href = `https://web.whatsapp.com/send?text=${link}`;\n                                    }}>\n                                        <svg width=\"38\" height=\"38\" viewBox=\"0 0 38 38\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <circle cx=\"19\" cy=\"19\" r=\"19\" fill=\"#25D366\" />\n                                            <path d=\"M27.9778 9.91232C25.6743 7.6033 22.6066 6.33333 19.3464 6.33333C12.6173 6.33333 7.14157 11.809 7.14157 18.5382C7.14157 20.6878 7.70233 22.7879 8.76888 24.6406L7.03711 30.963L13.5079 29.2642C15.2891 30.2373 17.2958 30.7486 19.3409 30.7486H19.3464C26.0701 30.7486 31.6667 25.2729 31.6667 18.5437C31.6667 15.2836 30.2813 12.2214 27.9778 9.91232ZM19.3464 28.6924C17.5212 28.6924 15.7344 28.2031 14.1786 27.2795L13.8103 27.0596L9.97287 28.0657L10.9954 24.3218L10.7535 23.9369C9.73647 22.3206 9.2032 20.4569 9.2032 18.5382C9.2032 12.947 13.7553 8.39496 19.3519 8.39496C22.0623 8.39496 24.6077 9.45052 26.5209 11.3692C28.4341 13.2879 29.6106 15.8333 29.6051 18.5437C29.6051 24.1403 24.9376 28.6924 19.3464 28.6924ZM24.9101 21.0946C24.6077 20.9407 23.1068 20.204 22.8265 20.105C22.5461 20.0006 22.3427 19.9511 22.1393 20.259C21.9358 20.5668 21.3531 21.2486 21.1717 21.4575C20.9957 21.6609 20.8143 21.6884 20.5119 21.5344C18.7197 20.6383 17.5432 19.9346 16.3612 17.906C16.0478 17.3672 16.6746 17.4057 17.2573 16.2402C17.3563 16.0367 17.3068 15.8608 17.2298 15.7069C17.1528 15.5529 16.5426 14.0521 16.2897 13.4418C16.0423 12.8481 15.7894 12.9306 15.6025 12.9196C15.4266 12.9086 15.2232 12.9086 15.0197 12.9086C14.8163 12.9086 14.4865 12.9855 14.2061 13.2879C13.9257 13.5958 13.1395 14.3325 13.1395 15.8333C13.1395 17.3342 14.2336 18.7856 14.382 18.989C14.536 19.1924 16.5316 22.2711 19.5938 23.5961C21.529 24.4317 22.2877 24.5032 23.2553 24.3602C23.8435 24.2723 25.0585 23.6236 25.3114 22.9089C25.5643 22.1942 25.5643 21.5839 25.4873 21.4575C25.4159 21.32 25.2125 21.2431 24.9101 21.0946Z\" fill=\"white\" />\n                                        </svg>\n                                        <p>Whattps</p>\n                                    </div>\n                                    <div>\n                                        <svg width=\"38\" height=\"38\" viewBox=\"0 0 38 38\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <circle cx=\"19\" cy=\"19\" r=\"19\" fill=\"#3B5998\" />\n                                            <path d=\"M25.017 21.75L25.7949 16.6827H20.9314V13.3943C20.9314 12.008 21.6108 10.6566 23.789 10.6566H26V6.34234C26 6.34234 23.9936 6 22.0752 6C18.0701 6 15.4521 8.42703 15.4521 12.8206V16.6827H11V21.75H15.4521V34H20.9314V21.75H25.017Z\" fill=\"white\" />\n                                        </svg>\n                                        <p>facebook</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </>\n                    }\n                </div>\n                <Dialog open={this.state.invalid_poll_id}>\n                    <DialogTitle>No poll exits</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>There is no live poll(s) with id <b>{this.poll_id}</b>,</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button\n                            variant='contained'\n                            size=\"medium\"\n                            onClick={() => { let props = this.props as any; props.history.push('/home') }}\n                        >\n                            Back\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                {!this.state.data_loaded &&\n                    <Container\n                        sx={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%,-50%)', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column' }}\n                    >\n                        <CircularProgress />\n                        <p>Fetching question data ...</p>\n                    </Container>\n                }\n\n            </div>\n        )\n    }\n}","import { MoreVert, DeleteOutlined } from \"@mui/icons-material\";\nimport { Stack, TextField, IconButton, Popover, List, ListSubheader, ListItem, ListItemButton, ListItemIcon, ListItemText, InputAdornment } from \"@mui/material\";\nimport React from \"react\";\nimport styles from './create.module.css';\nconst OptionField =\n    ({ opt, i, onChange, onDelete }: { opt: string, i: number, onChange?: Function, onDelete?: Function }) => {\n        const [open, setOpen] = React.useState(false);\n        let err = false;\n        if (opt === '' || opt.length <= 0) {\n            err = true;\n        }\n        const [empty, setempty] = React.useState(err);\n        const _onChange = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>, index: number) => {\n            let length = e.target.value.length;\n            if ((length <= 0 && e.target.value === ' '.repeat(length))) {\n                setempty(true);\n            }\n            else { setempty(false) }\n            if (onChange) { onChange(e.target.value); };\n        };\n        let anchorEl = document.getElementById(`more-btn${i + 1}`);\n        return (\n            <Stack direction={'row'} alignItems={'baseline'} justifyContent={'space-between'}>\n                <TextField\n                    error={empty}\n                    value={opt}\n                    onChange={(e) => _onChange(e, i)} label={`option-${i + 1}`}\n                    spellCheck\n                    sx={{ width: '100%' }}\n                    placeholder={`Select your option-${i + 1}`}\n                    id={`poll-option-${i + 1}`}\n\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\" >\n                                <div className={styles['option-number']}><p>{i + 1}</p></div>\n                            </InputAdornment>\n                        ),\n                    }}\n                />\n                <IconButton\n                    id={`more-btn${i + 1}`}\n                    onClick={() => { setOpen(true) }}\n                >\n                    <MoreVert />\n                </IconButton>\n                <Popover\n                    open={(open && anchorEl != null)}\n                    anchorEl={anchorEl ? anchorEl : null}\n                    anchorOrigin={{\n                        vertical: 'center',\n                        horizontal: 'right',\n                    }}\n                    transformOrigin={{ vertical: 'center', horizontal: 'right' }}\n                    onClose={() => { setOpen(false) }}\n                >\n                    <List\n                        sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}\n                        component=\"nav\"\n                        subheader={\n                            <ListSubheader>More</ListSubheader>\n                        }\n                    >\n                        <ListItem>\n\n                        </ListItem>\n                        <ListItemButton onClick={() => { setOpen(false); if (onDelete) { onDelete() } }}>\n\n                            <ListItemIcon>\n                                <DeleteOutlined color='warning' />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Delete\" />\n                        </ListItemButton>\n                    </List>\n                </Popover>\n            </Stack>\n        )\n\n    }\nexport default OptionField;","import React from \"react\";\nimport {\n    TextField,\n    IconButton,\n    InputAdornment,\n    Button,\n    Stack,\n    Tooltip,\n    CircularProgress,\n    Snackbar,\n    Alert,\n    Dialog, DialogActions, DialogTitle, DialogContent, DialogContentText, Collapse\n} from \"@mui/material\";\nimport { Add, ExpandLess, ExpandMore, SaveOutlined } from \"@mui/icons-material\";\nimport OptionField from './OptionField';\nimport { sendQuestionData, saveQuestionId, getSavedQuestionId } from \"../../Utils/utils\";\nimport Navbar from \"../../Components/NavBar\";\nimport styles from './create.module.css';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns'\nimport { DesktopDateTimePicker, LocalizationProvider, MobileDateTimePicker } from \"@mui/lab\";\n\ninterface StateProps {\n    question: string;\n    options: string[];\n    question_title: string;\n    question_description: string;\n    no_of_options: number;\n    submit_loading: boolean;\n    window_width: number;\n    open_snackbar: boolean;\n    snackbar_msg: string;\n    snack_bar_severity: 'error' | 'success' | 'warning' | 'info';\n    show_success_dialog: boolean\n    no_question_error: boolean;\n    no_title_error: boolean;\n    open_advance_settings: boolean;\n    expire_date: Date | null\n}\n\nexport default class Create extends React.Component<{}, StateProps>{\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            question: '',\n            options: [],\n            no_of_options: 2,\n            submit_loading: false,\n            open_snackbar: false,\n            snackbar_msg: '',\n            snack_bar_severity: 'warning',\n            show_success_dialog: false,\n            question_description: '',\n            question_title: 'TITLE',\n            no_question_error: false,\n            no_title_error: false,\n            open_advance_settings: false,\n            expire_date: null,\n            window_width: window.innerWidth\n        }\n        let options = this.state.options;\n        for (let i = 0; i < this.state.no_of_options; i++) {\n            options[i] = '';\n        }\n        this.setState({ options });\n    };\n    componentDidMount() {\n        window.addEventListener('resize', () => {\n            this.setState({ window_width: window.innerWidth });\n        }\n        )\n    }\n    addNewOptionField = () => {\n        this.setState({ no_of_options: this.state.no_of_options + 1 });\n        let options = this.state.options;\n        options.push('');\n        this.setState({ options })\n    }\n\n    deleteOption = (index: number) => {\n        if (this.state.no_of_options <= 2) {\n            this.setState({ open_snackbar: true, snackbar_msg: 'Couldn\\'t be deleted.', snack_bar_severity: 'error' })\n            return;\n        }\n        this.setState({ no_of_options: this.state.no_of_options - 1 });\n        let options = this.state.options;\n        options.splice(index, 1);\n        this.setState({ options });\n\n    }\n    getOptionFields = () => {\n        const updateOptionsValues = (value: string, i: number) => {\n            let options = this.state.options;\n            options[i] = value;\n            this.setState({ options });\n        }\n\n        let arr: JSX.Element[] = [];\n        this.state.options.forEach((opt, i) => {\n            arr.push(\n                <OptionField\n                    opt={opt}\n                    key={i}\n                    i={i}\n                    onChange={(value: string) => { updateOptionsValues(value, i) }} onDelete={() => { this.deleteOption(i) }}\n                />\n            )\n        });\n        return arr;\n\n    }\n\n    onConfirm = () => {\n        let options = this.state.options;\n        let question = this.state.question;\n        let title = this.state.question_title;\n        let description = this.state.question_description;\n        if (description.length < 1 || description === ' '.repeat(description.length)) {\n            description = ''\n        }\n\n        if (options.length <= 1 || this.state.no_of_options <= 1) {\n            this.setState({ open_snackbar: true, snack_bar_severity: 'warning', snackbar_msg: 'No.Of options should be more than one.' }); return;\n        }\n        if (question.length <= 0 || question === ' '.repeat(question.length)) {\n            this.setState({ open_snackbar: true, snack_bar_severity: 'error', snackbar_msg: 'Question field is empty.', no_question_error: true });\n            document.getElementById('poll-question')?.focus();\n            return;\n        }\n        if (title.length <= 0 || title === ' '.repeat(title.length)) {\n            this.setState({ open_snackbar: true, snack_bar_severity: 'error', snackbar_msg: 'Title field is empty.', no_title_error: true });\n            document.getElementById('poll-title')?.focus();\n            return;\n        }\n        this.setState({ no_question_error: false, no_title_error: false })\n        for (let i = 0; i < options.length; i++) {\n            if (options[i] === ' '.repeat(options[i].length)) {\n                this.setState({ open_snackbar: true, snack_bar_severity: 'warning', snackbar_msg: 'Option(s) fields is empty.' });\n                document.getElementById(`poll-option-${i + 1}`)?.focus();\n                return;\n            }\n        }\n        this.setState({ submit_loading: true });\n\n        let data = { options, question, question_title: title, question_description: description, expire_at: this.state.expire_date }\n        sendQuestionData(data).then(json => {\n            if (json.question_id) {\n                saveQuestionId(json.question_id!)\n                this.setState({ show_success_dialog: true });\n                this.setState({ submit_loading: false });\n            }\n        })\n            .catch(err => {\n                console.error(err);\n                this.setState({ submit_loading: false });\n            })\n\n    }\n\n    render(): React.ReactNode {\n\n        return (\n            <div className={styles['container']}>\n                <Navbar />\n                <div className={styles['circle-right']}></div>\n                <div className={styles['circle-left']}></div>\n                <div className={styles['wrapper']}>\n                    <div className={styles['left']}>\n                        <h2>Create Poll</h2>\n                        <div>\n                            <h3>Title</h3>\n                            <TextField\n                                onChange={e => { this.setState({ question_title: e.target.value }) }}\n                                variant='outlined'\n                                error={this.state.no_title_error}\n                                placeholder=\"Enter poll title\"\n                                required type={'text'} maxRows={1} rows={0}\n                                id='poll-title'\n                                value={this.state.question_title}\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\" >\n                                            <object aria-label=\"T\" data=\"media/icons/T.svg\" type=\"image/svg+xml\"></object>\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                        </div>\n                        <div>\n                            <h3>Question</h3>\n                            <TextField\n                                onChange={e => { this.setState({ question: e.target.value }) }}\n                                variant='outlined'\n                                error={this.state.no_question_error}\n                                placeholder=\"Enter your question?\"\n                                required type={'text'} maxRows={1}\n                                id='poll-question'\n                                value={this.state.question}\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\" >\n                                            <object aria-label=\"question_mark\" data=\"media/icons/question_mark.svg\" type=\"image/svg+xml\"></object>\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                        </div>\n                        <div>\n                            <h3>Description</h3>\n                            <TextField\n                                multiline\n                                rows={4} value={this.state.question_description}\n                                onChange={e => { this.setState({ question_description: e.target.value }) }}\n                                variant='outlined'\n                                placeholder=\"Your description goes here..(optional)\"\n                                required type={'text'}\n                            // InputProps={{\n                            //     startAdornment: (\n                            //         <InputAdornment position=\"end\"  >                                            \n                            //                 <object data=\"media/icons/pencil.svg\" type=\"image/svg+xml\"></object>\n                            //         </InputAdornment>\n                            //     ),\n                            // }}\n                            />\n                        </div>\n\n                        <Stack direction=\"column\" spacing={2} alignContent={'flex-start'} className={styles[\"poll-options\"]}>\n                            <h3>Options</h3>\n                            {this.getOptionFields()}\n                            <Tooltip title=\"Add new option to list.\" sx={{ alignSelf: 'flex-start' }}>\n                                <IconButton color=\"primary\" onClick={this.addNewOptionField}>\n                                    <Add fontSize=\"large\" sx={{ borderRadius: '4px', p: '2px' }} />\n                                </IconButton>\n                            </Tooltip>\n                        </Stack>\n\n                        <div style={{ width: '100%', height: '1px', backgroundColor: '#c4c4c4', marginTop: '0.3rem' }}></div>\n                        <Stack className={styles['advanced-settings']} width={'100%'} direction={'column'}>\n                            <Stack direction={'row'} width={'100%'} justifyContent={'space-between'} alignItems={'center'} >\n                                <p style={{ cursor: 'pointer' }} onClick={() => { this.setState({ open_advance_settings: !this.state.open_advance_settings }) }} >Advanced settings</p>\n                                <div style={{ cursor: 'pointer' }} onClick={() => { this.setState({ open_advance_settings: !this.state.open_advance_settings }) }}>\n                                    {this.state.open_advance_settings ? <ExpandLess /> : <ExpandMore />}\n                                </div>\n                            </Stack>\n                            <Collapse unmountOnExit in={this.state.open_advance_settings}>\n                                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                                    {this.state.window_width >= 780 &&\n                                        <DesktopDateTimePicker\n                                            label=\"Expire date\"\n                                            value={this.state.expire_date}\n                                            minDateTime={new Date()}\n                                            onChange={(new_date) => { this.setState({ expire_date: new_date }) }}\n                                            renderInput={(params) => <TextField {...params} />}\n                                        />}\n                                    {this.state.window_width < 780 &&\n                                        <MobileDateTimePicker\n                                            label=\"Expire date\"\n                                            value={this.state.expire_date}\n                                            minDateTime={new Date()}\n                                            onChange={(new_date) => { this.setState({ expire_date: new_date }) }}\n                                            renderInput={(params) => <TextField {...params} />}\n                                        />}\n                                </LocalizationProvider>\n                            </Collapse>\n                        </Stack>\n                        {!this.state.submit_loading &&\n                            <Button\n                                startIcon={<SaveOutlined />}\n                                variant=\"contained\"\n                                onClick={this.onConfirm}\n                                size=\"large\"\n                                sx={{ width: 'fit-content', marginTop: '2rem' }}\n                            >Confirm\n                            </Button>\n                        }\n\n                        {\n                            this.state.submit_loading &&\n                            <Button disabled\n                                color='primary'\n                                variant=\"contained\"\n                                sx={{ width: 'fit-content', marginTop: '2rem' }}\n                                size=\"medium\"\n                                startIcon={<CircularProgress color=\"inherit\" />}\n                            >\n                                Confirm\n                            </Button>\n                        }\n                    </div>\n                    <div className={styles['right']}>\n                        <img src=\"media/illustrations/create_illustration.svg\" alt=\"create_illustration\"></img>\n                    </div>\n                </div>\n                <Snackbar\n                    open={this.state.open_snackbar}\n                    translate=\"yes\"\n                    autoHideDuration={1500}\n                    onClose={() => this.setState({ open_snackbar: false })}\n                >\n                    <Alert severity={this.state.snack_bar_severity} sx={{ width: '100%' }}>{this.state.snackbar_msg}</Alert>\n                </Snackbar>\n\n                <Dialog open={this.state.show_success_dialog} >\n                    <DialogTitle><b>Successfully created your poll.</b></DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Your poll is now created. To make others to voter to your poll send this\n                            <a href={`${window.location.origin}/vote?id=${getSavedQuestionId()}`}>{`${window.location.origin}/vote?id=${getSavedQuestionId()}`}</a>to them.<br />\n                            Or by typing this <b>{getSavedQuestionId()}</b> Join Id in <a href='www.google.com'>www.website.com</a>\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button variant=\"text\" size='small' color='inherit'\n                            onClick={() => { this.setState({ show_success_dialog: false }) }}\n                        >close</Button>\n                        <Button variant=\"contained\" size='medium' color='primary'>View poll</Button>\n                    </DialogActions>\n\n                </Dialog>\n            </div>\n        );\n    }\n}\n","import {useState } from 'react'\nimport styles from './signin.module.css';\nimport { TextField, Button, Slide, Alert, InputAdornment } from '@mui/material'\nimport Navbar from '../../Components/NavBar';\nimport { SERVER_URL } from '../../config';\nimport { setIsAuth } from '../../Utils/utils';\n\nexport const Signin = () => {\n    const [user_name, setUserName] = useState('')\n    const [password, setPassword] = useState('')\n    const [retyped_password, setRetypedPassword] = useState('')\n    const [openAlert, setOpenAlert] = useState(false);\n    const [alert_severity, setAlertSeverity] = useState<'info' | 'warning' | 'success' | 'error'>(\"info\");\n    const [alert_text, setAlertText] = useState('');\n    const [alert_title, setAlertTitle] = useState('');\n\n    const [user_name_field_error, setUserNameFieldError] = useState(false);\n    const [password_field_error, setPasswordFieldError] = useState(false);\n    const [retyped_password_field_error, setRetypedPasswordFieldError] = useState(false);\n\n    const validFields = () => {\n        \n        if(user_name.includes(' ')){\n            document.getElementById('user_name')?.focus();\n            setUserNameFieldError(true);\n            setOpenAlert(true); setAlertSeverity('warning'); setAlertText(\"No empty spaces are allowed.\"); setAlertTitle('Error!');\n            return false;\n        }\n        if (password.includes(' ')) {\n            document.getElementById('password')?.focus();\n            setPasswordFieldError(true)\n            setOpenAlert(true); setAlertSeverity('warning'); setAlertText(\"No empty spaces are allowed.\"); setAlertTitle('Error!');\n            return false;\n        }\n\n        if(user_name.length <=8){\n            document.getElementById('user_name')?.focus();\n            setUserNameFieldError(true);\n            setOpenAlert(true); setAlertSeverity('warning'); setAlertText(\"Number of character in User Name should be greater than 8.\"); setAlertTitle('Error!');\n            return false;\n        }\n        if (password.length <=8) {\n            document.getElementById('password')?.focus();\n            setUserNameFieldError(true);\n            setOpenAlert(true); setAlertSeverity('warning'); setAlertText(\"Number of character in Password should be greater than 8.\"); setAlertTitle('Error!');\n            return false;\n        }\n\n        if (user_name === ' '.repeat(user_name.length) || user_name.length <= 0) {\n            document.getElementById('user_name')?.focus();\n            setUserNameFieldError(true);\n            setOpenAlert(true); setAlertSeverity('error'); setAlertText(\"Username is required!\"); setAlertTitle('Error!'); setRetypedPasswordFieldError(true);\n            return false;\n        }\n        if (password === ' '.repeat(password.length) || password.length <= 0) {\n            document.getElementById('password')?.focus();\n            setPasswordFieldError(true)\n            setOpenAlert(true); setAlertSeverity('error'); setAlertText(\"Password is required!\"); setAlertTitle('Error!'); setRetypedPasswordFieldError(true);\n            return false;\n        }\n        if (retyped_password === ' '.repeat(retyped_password.length) || retyped_password.length <= 0) {\n            document.getElementById('retyped_password')?.focus();\n            setRetypedPasswordFieldError(true);\n            setOpenAlert(true); setAlertSeverity('error'); setAlertText(\"Confirm password field is empty!\"); setAlertTitle('Error!'); setRetypedPasswordFieldError(true);\n            return false;\n        }\n        if (retyped_password !== password) {\n            setRetypedPassword('');\n            setOpenAlert(true); setAlertSeverity('error'); setAlertText(\"Those passwords didn't match,Try again.\"); setAlertTitle('Mismatch!'); setRetypedPasswordFieldError(true);\n            return false;\n        }\n        return true;\n    }\n    const signIn = () => {\n        setOpenAlert(false);\n        setUserNameFieldError(false);\n        setPasswordFieldError(false);\n        setRetypedPasswordFieldError(false);\n        if (!validFields()) return;\n        fetch(`${SERVER_URL}/register`, {\n            method: \"POST\", body: JSON.stringify(\n                {\n                    username: user_name,\n                    password\n                }\n            ),\n            mode: 'cors',\n            headers: { 'Content-Type': 'application/json' },credentials:'include'\n        }).then(res => {\n            res.json().then(res_json => {\n                if (res_json.msg) {\n                    if (res_json.error) {\n                        setOpenAlert(true); setAlertSeverity('warning'); setAlertText(res_json.msg); setRetypedPasswordFieldError(true);\n                        return;\n                    }\n                    setOpenAlert(true); \n                    setAlertSeverity('success'); \n                    setAlertText(res_json.msg); \n                    setAlertTitle('Success'); \n                    setIsAuth(true);\n                    window.location.href = '/dashboard'\n                }\n\n            })\n        })\n    }\n\n    return (\n        <div className={styles['container']}>\n            <Navbar />\n            <div >\n                <Slide mountOnEnter unmountOnExit in={openAlert}>\n                    <Alert severity={alert_severity} title={alert_title}>{alert_text} </Alert>\n                </Slide>\n                <div className={styles['wrapper']}>\n                    <div>\n                        <div className={styles['icon']}>\n                            <svg width=\"39\" height=\"51\" viewBox=\"0 0 39 51\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M34.0206 16.941H31.6005V12.1007C31.6005 5.42111 26.1794 0 19.4998 0C12.8202 0 7.39909 5.42111 7.39909 12.1007V16.941H4.97895C2.3168 16.941 0.138672 19.1191 0.138672 21.7812V45.9826C0.138672 48.6448 2.3168 50.8229 4.97895 50.8229H34.0206C36.6828 50.8229 38.8609 48.6448 38.8609 45.9826V21.7812C38.8609 19.1191 36.6828 16.941 34.0206 16.941ZM12.2394 12.1007C12.2394 8.08326 15.4824 4.84028 19.4998 4.84028C23.5172 4.84028 26.7602 8.08326 26.7602 12.1007V16.941H12.2394V12.1007ZM34.0206 45.9826H4.97895V21.7812H34.0206V45.9826ZM19.4998 38.7222C22.1619 38.7222 24.3401 36.5441 24.3401 33.8819C24.3401 31.2198 22.1619 29.0417 19.4998 29.0417C16.8376 29.0417 14.6595 31.2198 14.6595 33.8819C14.6595 36.5441 16.8376 38.7222 19.4998 38.7222Z\" fill=\"white\" />\n                            </svg>\n                        </div>\n                        <p>Sign In</p>\n                    </div>\n                    <div >\n                        <TextField\n                            id='user_name'\n                            value={user_name}\n                            onChange={(e) => { setUserName(e.target.value) }}\n                            label='user name'\n                            variant={'outlined'}\n                            required\n                            placeholder='user name'\n                            maxRows={1}\n                            error={user_name_field_error}\n                            rows={1}\n                            type={'email'}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <svg width=\"19\" height=\"21\" viewBox=\"0 0 19 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path d=\"M17.0618 19.0782V17.0741C17.0618 16.0112 16.6396 14.9917 15.8879 14.2401C15.1363 13.4884 14.1168 13.0661 13.0538 13.0661H5.0378C3.97481 13.0661 2.95535 13.4884 2.20371 14.2401C1.45206 14.9917 1.02979 16.0112 1.02979 17.0741V19.0782\" stroke=\"#9C19E0\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                            <path d=\"M9.04561 9.05812C11.2592 9.05812 13.0536 7.26367 13.0536 5.0501C13.0536 2.83653 11.2592 1.04208 9.04561 1.04208C6.83205 1.04208 5.0376 2.83653 5.0376 5.0501C5.0376 7.26367 6.83205 9.05812 9.04561 9.05812Z\" stroke=\"#9C19E0\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                        </svg>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                        <TextField\n                            id='password'\n                            value={password}\n                            onChange={(e) => { setPassword(e.target.value) }}\n                            label='password' variant={'outlined'}\n                            required\n                            placeholder='password'\n                            maxRows={1}\n                            error={password_field_error}\n                            rows={1}\n                            type={'password'}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <svg width=\"19\" height=\"18\" viewBox=\"0 0 19 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path d=\"M11.8361 5.46797L14.6513 2.65277M16.2599 1.04409L14.6513 2.65277L16.2599 1.04409ZM8.53023 8.77381C8.94554 9.1836 9.27569 9.67149 9.50168 10.2094C9.72766 10.7473 9.845 11.3246 9.84696 11.908C9.84891 12.4915 9.73544 13.0695 9.51306 13.6089C9.29069 14.1484 8.96382 14.6384 8.55126 15.051C8.1387 15.4636 7.64861 15.7904 7.1092 16.0128C6.56979 16.2352 5.99173 16.3487 5.40828 16.3467C4.82484 16.3448 4.24755 16.2274 3.70964 16.0014C3.17174 15.7754 2.68385 15.4453 2.27406 15.03C1.46822 14.1956 1.02231 13.0781 1.03239 11.9182C1.04247 10.7583 1.50773 9.64873 2.32795 8.8285C3.14817 8.00828 4.25774 7.54303 5.41766 7.53295C6.57759 7.52287 7.69507 7.96877 8.52942 8.77462L8.53023 8.77381ZM8.53023 8.77381L11.8361 5.46797L8.53023 8.77381ZM11.8361 5.46797L14.2491 7.88099L17.0643 5.0658L14.6513 2.65277L11.8361 5.46797Z\" stroke=\"#9C19E0\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                        </svg>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                        <TextField\n                            id='retyped_password'\n                            value={retyped_password}\n                            onChange={(e) => { setRetypedPassword(e.target.value) }}\n                            label='Retype password'\n                            variant={'outlined'}\n                            required\n                            placeholder='Retype password'\n                            maxRows={1}\n                            error={retyped_password_field_error}\n                            rows={1}\n                            type={'password'}\n\n                        />\n                    </div>\n                    <div>\n                        <Button onClick={signIn} sx={{ textTransform: 'none' }} variant='contained' size='medium'>Sign In</Button>\n                        <a href=\"signup\">I Already have an account? Sign Up</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Signin","import { useState } from 'react'\nimport styles from './signup.module.css';\nimport { TextField, Button, Slide, Alert, InputAdornment } from '@mui/material'\nimport Navbar from '../../Components/NavBar';\nimport { SERVER_URL } from '../../config';\nimport { setIsAuth } from '../../Utils/utils';\nexport const Signup = () => {\n    const [user_name, setUserName] = useState('')\n    const [password, setPassword] = useState('')\n    const [openAlert, setOpenAlert] = useState(false);\n    const [alert_severity, setAlertSeverity] = useState<'info' | 'warning' | 'success' | 'error'>(\"info\");\n    const [alert_text, setAlertText] = useState('');\n    const [alert_title, setAlertTitle] = useState('');\n\n    const [user_name_field_error, setUserNameFieldError] = useState(false);\n    const [password_field_error, setPasswordFieldError] = useState(false);\n\n    const validFields = () => {\n\n        if (user_name.includes(' ')) {\n            document.getElementById('user_name')?.focus();\n            setUserNameFieldError(true);\n            setOpenAlert(true); setAlertSeverity('warning'); setAlertText(\"No empty spaces are allowed.\"); setAlertTitle('Error!');\n            return false;\n        }\n        if (password.includes(' ')) {\n            document.getElementById('password')?.focus();\n            setPasswordFieldError(true)\n            setOpenAlert(true); setAlertSeverity('warning'); setAlertText(\"No empty spaces are allowed.\"); setAlertTitle('Error!');\n            return false;\n        }\n\n        if (user_name.length <= 8) {\n            document.getElementById('user_name')?.focus();\n            setUserNameFieldError(true);\n            setOpenAlert(true); setAlertSeverity('warning'); setAlertText(\"Number of character in User Name should be greater than 8.\"); setAlertTitle('Error!');\n            return false;\n        }\n        if (password.length <= 8) {\n            document.getElementById('password')?.focus();\n            setUserNameFieldError(true);\n            setOpenAlert(true); setAlertSeverity('warning'); setAlertText(\"Number of character in Password should be greater than 8.\"); setAlertTitle('Error!');\n            return false;\n        }\n\n        if (user_name === ' '.repeat(user_name.length)) {\n            document.getElementById('user_name')?.focus();\n            setUserNameFieldError(true);\n            setOpenAlert(true); setAlertSeverity('error'); setAlertText(\"Username is required!\"); setAlertTitle('Error!');\n            return false;\n        }\n        if (password === ' '.repeat(password.length)) {\n            document.getElementById('password')?.focus();\n            setPasswordFieldError(true)\n            setOpenAlert(true); setAlertSeverity('error'); setAlertText(\"Password is required!\"); setAlertTitle('Error!');\n            return false;\n        }\n\n        return true;\n    }\n    const signUp = () => {\n        setOpenAlert(false);\n        setUserNameFieldError(false);\n        setPasswordFieldError(false);\n        if (!validFields()) return;\n        console.log(\"Ha coming\");\n        \n        fetch(`${SERVER_URL}/login`, {\n            method: \"POST\", body: JSON.stringify(\n                {\n                    username: user_name,\n                    password\n                }\n            ),\n            mode: 'cors',\n            headers: { 'Content-Type': 'application/json' }, credentials: 'include',\n        }).then(res => {\n            res.json().then(res_json => {\n                if (res_json.msg) {\n                    if (res_json.error) {\n                        setOpenAlert(true); setAlertSeverity('warning'); setAlertText(res_json.msg);\n                        return;\n                    }\n                    setOpenAlert(true);\n                    setAlertSeverity('success');\n                    setAlertText(res_json.msg);\n                    setAlertTitle('Success');\n                    setIsAuth(true);\n                    window.location.href = '/dashboard'\n                }\n\n            })\n        })\n\n    }\n\n    return (\n        <div className={styles['container']}>\n            <Navbar />\n            <div >\n                <Slide mountOnEnter unmountOnExit in={openAlert}>\n                    <Alert severity={alert_severity} title={alert_title}>{alert_text} </Alert>\n                </Slide>\n                <div className={styles['wrapper']}>\n                    <div>\n                        <div className={styles['icon']}>\n                            <svg width=\"39\" height=\"51\" viewBox=\"0 0 39 51\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M34.0206 16.941H31.6005V12.1007C31.6005 5.42111 26.1794 0 19.4998 0C12.8202 0 7.39909 5.42111 7.39909 12.1007V16.941H4.97895C2.3168 16.941 0.138672 19.1191 0.138672 21.7812V45.9826C0.138672 48.6448 2.3168 50.8229 4.97895 50.8229H34.0206C36.6828 50.8229 38.8609 48.6448 38.8609 45.9826V21.7812C38.8609 19.1191 36.6828 16.941 34.0206 16.941ZM12.2394 12.1007C12.2394 8.08326 15.4824 4.84028 19.4998 4.84028C23.5172 4.84028 26.7602 8.08326 26.7602 12.1007V16.941H12.2394V12.1007ZM34.0206 45.9826H4.97895V21.7812H34.0206V45.9826ZM19.4998 38.7222C22.1619 38.7222 24.3401 36.5441 24.3401 33.8819C24.3401 31.2198 22.1619 29.0417 19.4998 29.0417C16.8376 29.0417 14.6595 31.2198 14.6595 33.8819C14.6595 36.5441 16.8376 38.7222 19.4998 38.7222Z\" fill=\"white\" />\n                            </svg>\n                        </div>\n                        <p>Sign Up</p>\n                    </div>\n                    <div >\n                        <TextField\n                            id='user_name'\n                            value={user_name}\n                            onChange={(e) => { setUserName(e.target.value) }}\n                            label='user name'\n                            variant={'outlined'}\n                            required\n                            placeholder='user name'\n                            maxRows={1}\n                            error={user_name_field_error}\n                            rows={1}\n                            type={'email'}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <svg width=\"19\" height=\"21\" viewBox=\"0 0 19 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path d=\"M17.0618 19.0782V17.0741C17.0618 16.0112 16.6396 14.9917 15.8879 14.2401C15.1363 13.4884 14.1168 13.0661 13.0538 13.0661H5.0378C3.97481 13.0661 2.95535 13.4884 2.20371 14.2401C1.45206 14.9917 1.02979 16.0112 1.02979 17.0741V19.0782\" stroke=\"#9C19E0\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                            <path d=\"M9.04561 9.05812C11.2592 9.05812 13.0536 7.26367 13.0536 5.0501C13.0536 2.83653 11.2592 1.04208 9.04561 1.04208C6.83205 1.04208 5.0376 2.83653 5.0376 5.0501C5.0376 7.26367 6.83205 9.05812 9.04561 9.05812Z\" stroke=\"#9C19E0\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                        </svg>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                        <TextField\n                            id='password'\n                            value={password}\n                            onChange={(e) => { setPassword(e.target.value) }}\n                            label='password' variant={'outlined'}\n                            required\n                            placeholder='password'\n                            maxRows={1}\n                            error={password_field_error}\n                            rows={1}\n                            type={'password'}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <svg width=\"19\" height=\"18\" viewBox=\"0 0 19 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path d=\"M11.8361 5.46797L14.6513 2.65277M16.2599 1.04409L14.6513 2.65277L16.2599 1.04409ZM8.53023 8.77381C8.94554 9.1836 9.27569 9.67149 9.50168 10.2094C9.72766 10.7473 9.845 11.3246 9.84696 11.908C9.84891 12.4915 9.73544 13.0695 9.51306 13.6089C9.29069 14.1484 8.96382 14.6384 8.55126 15.051C8.1387 15.4636 7.64861 15.7904 7.1092 16.0128C6.56979 16.2352 5.99173 16.3487 5.40828 16.3467C4.82484 16.3448 4.24755 16.2274 3.70964 16.0014C3.17174 15.7754 2.68385 15.4453 2.27406 15.03C1.46822 14.1956 1.02231 13.0781 1.03239 11.9182C1.04247 10.7583 1.50773 9.64873 2.32795 8.8285C3.14817 8.00828 4.25774 7.54303 5.41766 7.53295C6.57759 7.52287 7.69507 7.96877 8.52942 8.77462L8.53023 8.77381ZM8.53023 8.77381L11.8361 5.46797L8.53023 8.77381ZM11.8361 5.46797L14.2491 7.88099L17.0643 5.0658L14.6513 2.65277L11.8361 5.46797Z\" stroke=\"#9C19E0\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                        </svg>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n\n                    </div>\n                    <div>\n                        <Button onClick={signUp} sx={{ textTransform: 'none' }} variant='contained' size='medium'>Sign In</Button>\n                        <a href=\"signin\">I don't have an account? Create one</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Signup","import React, { Component } from 'react'\nimport styles from './dashboard.module.css';\nimport { ExpandLess, ExpandMore } from '@mui/icons-material';\nimport Chart, { ChartConfiguration, } from 'chart.js/auto'\nimport { Collapse } from '@mui/material';\ninterface Props {\n    created_by: string,\n    created_date: string,\n    created_time: string,\n    expire_at: string | null,\n    options: [],\n    question: string,\n    question_description: string,\n    question_id: string,\n    question_title: string\n    total_votes: number,\n    no_of_visits: number\n}\ninterface State {\n    show_description: boolean;\n}\n\n\n\nclass PollDetails extends Component<Props, State> {\n    ctx: CanvasRenderingContext2D | null = null;\n    canvas: HTMLCanvasElement | null = null;\n    chart: Chart | null = null;\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            show_description: false,\n        }\n    }\n    updateCanvas = () => {\n        if (this.canvas && this.ctx) {\n            this.chart?.destroy();\n            var grd = this.ctx.createLinearGradient(0, 0, 0, this.canvas.height);\n            grd.addColorStop(0, '#94DAFF');\n            grd.addColorStop(1, '#B91AFF');\n\n            const config: ChartConfiguration = {\n                type: 'bar',\n                data: {\n                    labels: this.props.options?.map((opt: any, index) => {\n                        return (opt.option as string);\n                    }),\n                    datasets: [{\n                        label: 'Votes',\n                        data: this.props.options?.map((opt: any, index) => {\n                            return (opt.no_of_polls as number);\n                        }),\n                        backgroundColor: grd\n                    }]\n                }, options: {\n                    maintainAspectRatio: false,\n                    responsive: true,\n                    plugins: {\n                        title: { display: true, align: 'center', color: '#ffff', text: 'votes graph' }\n                        , legend: { display: false }\n                    },\n\n                    scales: {\n                        yAxes: {\n                            grid: {\n                                drawBorder: true,\n                                color: '#4C3C77',\n                            },\n                            ticks: {\n                                color: 'hsla(0,0%,100%,0.8)'\n                            }\n                        },\n                        xAxes: {\n                            grid: {\n                                drawBorder: true,\n                                color: '#4C3C77',\n                            },\n                            ticks: {\n                                color: 'hsla(0,0%,100%,0.8)'\n                            }\n                        },\n\n                    }\n                }\n            }\n            this.chart = new Chart(this.ctx, config);\n        }\n    }\n    componentDidUpdate() {\n        this.updateCanvas();\n    }\n    componentDidMount() {\n\n        this.canvas = document.getElementById('chart-canvas') as HTMLCanvasElement;\n        if (this.canvas) {\n            this.canvas.height = 350\n            // this.canvas.width \n            this.ctx = this.canvas.getContext('2d');\n            this.updateCanvas();\n        }\n\n    }\n    render(): React.ReactNode {\n\n        return (\n            <>\n                <div className={styles['details-container']} >\n                    <div className={styles['details-wrapper']}>\n                        <h3>Details</h3>\n                        <hr></hr>\n                        <div className={styles['poll-details']}>\n                            <div>\n                                <p>Title:</p>\n                                <p>{this.props.question_title}</p>\n                            </div>\n                            <div>\n                                <p>Total votes:</p>\n                                <p>{this.props.total_votes}</p>\n                            </div>\n                            <div>\n                                <p>Expires at:</p>\n                                <p></p>\n                            </div>\n                            {this.props.question_description &&\n                                <div className={styles['details-description']}>\n                                    <div onClick={() => { this.setState({ show_description: !this.state.show_description }) }}>\n                                        {this.state.show_description && <p>Show description</p>}\n                                        {!this.state.show_description && <p>Hide description</p>}\n                                        {this.state.show_description ? <ExpandMore /> : <ExpandLess />}\n                                    </div>\n                                    <Collapse in={this.state.show_description}>\n                                        <p>{this.props.question_description}</p>\n                                    </Collapse>\n                                </div>\n                            }\n                        </div>\n                        <div className={styles['vote-chart']}>\n                            <canvas id='chart-canvas'></canvas>\n                        </div>\n                        <div className={styles['poll-percentages']}>\n                            {this.props.options.map((opt: any, index) => {\n\n                                return (\n                                    <div key={index}>\n                                        <svg width=\"9\" height=\"9\" viewBox=\"0 0 9 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <circle cx=\"4.5\" cy=\"4.5\" r=\"4.5\" fill=\"#8593ED\" />\n                                        </svg>\n                                        <div>\n                                            <span>{opt.option}</span>\n                                            <span>{Math.floor((opt.no_of_polls / this.props.total_votes) * 100)}%</span>\n                                        </div>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default PollDetails;","import { Component, ReactNode, } from 'react'\nimport PollDetails from './PollDetails';\nimport styles from './dashboard.module.css';\n// import './dashboard.css'\ninterface Props {\n    user_name: string;\n    xp: number;\n    total_created_polls: number;\n    questions_data: {\n        created_by: string, created_date: string, created_time: string,\n        expire_at: string | null,\n        options: [], question: string,\n        question_description: string,\n        question_id: string,\n        question_title: string\n        total_votes: number,\n        no_of_visits: number\n    }[],\n    total_visits: number;\n    total_votes: number;\n}\ninterface State {\n    open_poll_search: boolean;\n    poll_details_index: number;\n    show_poll_details: boolean;\n    width: number;\n}\nexport default class MyPolls extends Component<Props, State>{\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            open_poll_search: false,\n            poll_details_index: 0,\n            show_poll_details: true, width: window.innerWidth\n        }\n    }\n    displayNoPollsImage = async () => {\n        const res = await fetch('media/illustrations/no_data.svg');\n        const svg = await res.text();\n        let div = document.getElementById('no-data-container');\n        if (div) {\n            div.innerHTML = svg + '<p>No polls created.</p>'\n        }\n    }\n    async componentDidMount() {\n        if (window.innerWidth <= 1280) {\n            this.setState({ show_poll_details: false })\n        }\n        window.addEventListener('resize', () => {\n            if (window.innerWidth > 780) { this.setState({ show_poll_details: true }) ;}\n            this.setState({ width: window.innerWidth });\n        })\n        if (this.props.questions_data.length >= 0) {\n            await this.displayNoPollsImage();\n        }\n    }\n    pollStatusTableData = () => {\n        return (\n            <>\n                {this.props.questions_data.map((poll_data, index) => {\n                    let expired = false;\n                    let active = false;\n                    let dataAttributes: any = {}\n                    if (poll_data.expire_at) {\n                        let differ = new Date(poll_data.expire_at).getTime() - new Date(poll_data.created_time).getTime();\n                        if (differ <= 0) {\n                            expired = true; active = false;\n                            dataAttributes['data-expired'] = true;\n                        } else {\n                            expired = false;\n                            active = true;\n                            dataAttributes['data-active'] = true;\n                        }\n                    } else {\n                        dataAttributes['data-noexpire'] = true;\n                    }\n                    return (\n                        <tr key={index} onClick={() => {\n                            this.setState({ poll_details_index: index, show_poll_details: true });\n                        }} >\n                            <td><p>{poll_data.question_title}</p></td>\n                            <td><p>{poll_data.total_votes}</p></td>\n                            <td><p>{poll_data.no_of_visits}</p></td>\n                            <td><p>{poll_data.question_id}</p></td>\n                            <td {...dataAttributes}\n                            >\n                                <div>\n                                    {!poll_data.expire_at && <p>NO EXPIRATION</p>}\n                                    {expired && <p>CLOSED</p>}\n                                    {active && <p>ACTIVE</p>}\n                                </div>\n                            </td>\n                        </tr>\n                    )\n                })}\n            </>\n        )\n    }\n    render(): ReactNode {\n\n        return (\n            <div className={styles['center-container']} >\n                <div className={styles['center-wrapper']} >\n                    <div className={styles['center-top']}>\n                        <div style={{ display: 'flex', alignItems: 'baseline' }}>\n                            <h3>Hi,</h3><p>{this.props.user_name}</p>\n                        </div>\n\n                        <div style={{ display: 'flex', alignItems: 'baseline' }}>\n                            <p>{this.props.xp}\n                            </p>\n                            <sub>xp</sub></div>\n                    </div>\n\n\n                    <div className={styles['overall-container']}>\n                        <h3 className={styles['overall-heading']}>Overall status</h3>\n                        <div className={styles['overall-wrapper']}>\n                            <div>\n                                <div>\n                                    <div>\n                                        <svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path d=\"M2 12.8H9.71429V38H2V12.8ZM16.4 2H23.6V38H16.4V2ZM30.8 22.5714H38V38H30.8V22.5714Z\" stroke=\"#2E2C3F\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                        </svg>\n                                    </div>\n                                </div>\n                                <span>{this.props.total_created_polls}</span>\n                                <span>Created polls</span>\n                            </div>\n\n                            <div>\n                                <div>\n                                    <div>\n                                        <svg width=\"38\" height=\"29\" viewBox=\"0 0 38 29\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path d=\"M1 14.0909C1 14.0909 7.54545 1 19 1C30.4545 1 37 14.0909 37 14.0909C37 14.0909 30.4545 27.1818 19 27.1818C7.54545 27.1818 1 14.0909 1 14.0909Z\" stroke=\"#2E2C3F\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                            <path d=\"M18.9999 19.0001C21.7111 19.0001 23.909 16.8022 23.909 14.091C23.909 11.3798 21.7111 9.18188 18.9999 9.18188C16.2887 9.18188 14.0908 11.3798 14.0908 14.091C14.0908 16.8022 16.2887 19.0001 18.9999 19.0001Z\" stroke=\"#968AF4\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                        </svg>\n                                    </div>\n                                </div>\n                                <span>{this.props.total_visits}</span>\n                                <span>Visits</span>\n                            </div>\n\n                            <div>\n                                <div>\n                                    <div>\n                                        <svg width=\"37\" height=\"31\" viewBox=\"0 0 37 31\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path d=\"M26.4545 29.6363V26.4545C26.4545 24.7667 25.7841 23.1481 24.5907 21.9547C23.3973 20.7613 21.7787 20.0908 20.0909 20.0908H7.36364C5.6759 20.0908 4.05728 20.7613 2.86387 21.9547C1.67045 23.1481 1 24.7667 1 26.4545V29.6363\" stroke=\"#2E2C3F\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                            <path d=\"M13.7269 13.7273C17.2415 13.7273 20.0906 10.8782 20.0906 7.36364C20.0906 3.8491 17.2415 1 13.7269 1C10.2124 1 7.36328 3.8491 7.36328 7.36364C7.36328 10.8782 10.2124 13.7273 13.7269 13.7273Z\" stroke=\"#2E2C3F\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                            <path d=\"M36.0003 29.6362V26.4544C35.9992 25.0444 35.5299 23.6747 34.6661 22.5604C33.8022 21.446 32.5927 20.6501 31.2275 20.2976\" stroke=\"#2E2C3F\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                            <path d=\"M24.8633 1.20654C26.2321 1.55702 27.4454 2.35311 28.3118 3.46931C29.1782 4.58551 29.6485 5.95832 29.6485 7.37132C29.6485 8.78431 29.1782 10.1571 28.3118 11.2733C27.4454 12.3895 26.2321 13.1856 24.8633 13.5361\" stroke=\"#2E2C3F\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                        </svg>\n                                    </div>\n                                </div>\n                                <span>{this.props.total_votes}</span>\n                                <span>Votes</span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={styles['poll-status-container']}>\n                        <h3>Poll status</h3>\n                        {this.props.questions_data.length > 0 &&\n                            <>\n                                <div className={styles['poll-status-wrapper']}>\n                                    <div className={styles['poll-search']} data-open={this.state.open_poll_search}\n                                        onClick={() => {\n                                            this.setState({ open_poll_search: !this.state.open_poll_search })\n                                        }}\n                                    >\n                                        <div>\n                                            <svg width=\"21\" height=\"21\" viewBox=\"0 0 21 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                <path d=\"M15.0086 13.2075H14.06L13.7238 12.8834C14.9005 11.5146 15.6089 9.73756 15.6089 7.80446C15.6089 3.494 12.1149 0 7.80446 0C3.494 0 0 3.494 0 7.80446C0 12.1149 3.494 15.6089 7.80446 15.6089C9.73756 15.6089 11.5146 14.9005 12.8834 13.7238L13.2075 14.06V15.0086L19.211 21L21 19.211L15.0086 13.2075ZM7.80446 13.2075C4.81475 13.2075 2.40137 10.7942 2.40137 7.80446C2.40137 4.81475 4.81475 2.40137 7.80446 2.40137C10.7942 2.40137 13.2075 4.81475 13.2075 7.80446C13.2075 10.7942 10.7942 13.2075 7.80446 13.2075Z\" fill=\"#423F5A\" />\n                                            </svg>\n                                        </div>\n\n                                        <input />\n\n                                    </div>\n                                </div>\n                                <div className={styles['poll-status-table-container']}>\n                                    <table className={styles['poll-status-table']}>\n                                        <thead>\n                                            <tr>\n                                                <th>Title</th>\n                                                <th>Votes</th>\n                                                <th>Views</th>\n                                                <th>Poll Id</th>\n                                                <th>Status</th>\n                                            </tr>\n\n                                        </thead>\n                                        <tbody>\n                                            {this.pollStatusTableData()}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </>\n                        }{this.props.questions_data.length <= 0 &&\n                            <div className={styles['no-data-container']} id='no-data-container'> </div>\n                        }\n                    </div>\n                </div>\n                {this.props.questions_data.length > 0 && this.state.show_poll_details &&\n                    <>\n                        {this.state.width <= 1280 &&\n                            <div className={styles['poll-details-overlay']} onClick={() => { this.setState({ show_poll_details: false }) }} ></div>\n                        }\n                        <PollDetails {...this.props.questions_data[this.state.poll_details_index]} />\n                    </>\n                }\n            </div>\n        )\n    }\n}\n","import { CircularProgress } from '@mui/material';\nimport { Component } from 'react'\nimport Navbar from '../../Components/NavBar'\nimport { SERVER_URL } from '../../config'\nimport styles from './dashboard.module.css'\nimport MyPolls from './MyPolls';\ninterface Props {\n\n}\ninterface State {\n    user_name: string;\n    xp: number;\n    total_created_polls: number;\n    total_visits: number;\n    total_votes: number;\n    open_poll_search: boolean;\n    questions_data: {\n        created_by: string, created_date: string, created_time: string,\n        expire_at: string | null,\n        options: [], question: string,\n        question_description: string,\n        question_id: string,\n        question_title: string\n        total_votes: number,\n        no_of_visits: number\n    }[],\n    selected_poll: number;\n    is_loading: boolean;\n}\n\nexport default class index extends Component<Props, State> {\n    state: Readonly<State> = {\n        user_name: '',\n        total_created_polls: -1,\n        total_visits: -1,\n        total_votes: -1,\n        xp: -1,\n        open_poll_search: false,\n        questions_data: [],\n        selected_poll: -1, is_loading: true\n    }\n    componentDidMount() {\n        fetch(`${SERVER_URL}/dashboard`, { method: 'GET', credentials: 'include', mode: 'cors', }).then(res => {\n            res.json().then(res_json => {\n                if (res_json.error) {\n                    window.location.href = '/signin'; return;\n                }\n                let total_visits = 0\n                let total_votes = 0\n                res_json.questions_data.forEach((element: any) => {\n                    total_visits += element.no_of_visits;\n                    element.options.forEach((opt: any) => {\n                        total_votes += opt.no_of_polls\n                    }\n                    )\n                });\n                this.setState({\n                    user_name: res_json.username,\n                    total_visits,\n                    total_created_polls: res_json.questions_data.length,\n                    xp: res_json.xp,\n                    total_votes,\n                    questions_data: res_json.questions_data, is_loading: false\n                })\n            })\n        }).catch(err => {\n            console.error(err)\n        })\n\n    }\n\n    render() {\n        return (\n            <div className={styles['container']} >\n                <Navbar />\n                <div className={styles['wrapper']} >\n                    {!this.state.is_loading &&\n                        <>\n                            <div className={styles['menu-container']}>\n                                <div className={styles['menu']}>\n                                    <p>Dashboard</p>\n                                    <div>\n                                        <div className={styles['menu-item']} data-selected='true'>\n                                            <svg width=\"18\" height=\"24\" viewBox=\"0 0 14 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                <path d=\"M13 17V7\" stroke=\"white\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                                <path d=\"M7 17V1\" stroke=\"white\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                                <path d=\"M1 17V11\" stroke=\"white\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />:\n                                            </svg>\n\n                                            <p>My polls</p>\n                                        </div>\n                                        <div className={styles['menu-item']} >\n\n                                            <svg width=\"18\" height=\"20\" viewBox=\"0 0 18 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" > <path d=\"M17 19V17C17 15.9391 16.5786 14.9217 15.8284 14.1716C15.0783 13.4214 14.0609 13 13 13H5C3.93913 13 2.92172 13.4214 2.17157 14.1716C1.42143 14.9217 1 15.9391 1 17V19\" stroke=\"#656284\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" /> <path d=\"M9 9C11.2091 9 13 7.20914 13 5C13 2.79086 11.2091 1 9 1C6.79086 1 5 2.79086 5 5C5 7.20914 6.79086 9 9 9Z\" stroke=\"#656284\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" /> </svg>\n                                            <p>Profile</p>\n                                        </div>\n                                        <div className={styles['menu-item']}>\n                                            <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                <path d=\"M12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15Z\" stroke=\"#656284\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                                <path d=\"M19.4 15C19.2669 15.3016 19.2272 15.6362 19.286 15.9606C19.3448 16.285 19.4995 16.5843 19.73 16.82L19.79 16.88C19.976 17.0657 20.1235 17.2863 20.2241 17.5291C20.3248 17.7719 20.3766 18.0322 20.3766 18.295C20.3766 18.5578 20.3248 18.8181 20.2241 19.0609C20.1235 19.3037 19.976 19.5243 19.79 19.71C19.6043 19.896 19.3837 20.0435 19.1409 20.1441C18.8981 20.2448 18.6378 20.2966 18.375 20.2966C18.1122 20.2966 17.8519 20.2448 17.6091 20.1441C17.3663 20.0435 17.1457 19.896 16.96 19.71L16.9 19.65C16.6643 19.4195 16.365 19.2648 16.0406 19.206C15.7162 19.1472 15.3816 19.1869 15.08 19.32C14.7842 19.4468 14.532 19.6572 14.3543 19.9255C14.1766 20.1938 14.0813 20.5082 14.08 20.83V21C14.08 21.5304 13.8693 22.0391 13.4942 22.4142C13.1191 22.7893 12.6104 23 12.08 23C11.5496 23 11.0409 22.7893 10.6658 22.4142C10.2907 22.0391 10.08 21.5304 10.08 21V20.91C10.0723 20.579 9.96512 20.258 9.77251 19.9887C9.5799 19.7194 9.31074 19.5143 9 19.4C8.69838 19.2669 8.36381 19.2272 8.03941 19.286C7.71502 19.3448 7.41568 19.4995 7.18 19.73L7.12 19.79C6.93425 19.976 6.71368 20.1235 6.47088 20.2241C6.22808 20.3248 5.96783 20.3766 5.705 20.3766C5.44217 20.3766 5.18192 20.3248 4.93912 20.2241C4.69632 20.1235 4.47575 19.976 4.29 19.79C4.10405 19.6043 3.95653 19.3837 3.85588 19.1409C3.75523 18.8981 3.70343 18.6378 3.70343 18.375C3.70343 18.1122 3.75523 17.8519 3.85588 17.6091C3.95653 17.3663 4.10405 17.1457 4.29 16.96L4.35 16.9C4.58054 16.6643 4.73519 16.365 4.794 16.0406C4.85282 15.7162 4.81312 15.3816 4.68 15.08C4.55324 14.7842 4.34276 14.532 4.07447 14.3543C3.80618 14.1766 3.49179 14.0813 3.17 14.08H3C2.46957 14.08 1.96086 13.8693 1.58579 13.4942C1.21071 13.1191 1 12.6104 1 12.08C1 11.5496 1.21071 11.0409 1.58579 10.6658C1.96086 10.2907 2.46957 10.08 3 10.08H3.09C3.42099 10.0723 3.742 9.96512 4.0113 9.77251C4.28059 9.5799 4.48572 9.31074 4.6 9C4.73312 8.69838 4.77282 8.36381 4.714 8.03941C4.65519 7.71502 4.50054 7.41568 4.27 7.18L4.21 7.12C4.02405 6.93425 3.87653 6.71368 3.77588 6.47088C3.67523 6.22808 3.62343 5.96783 3.62343 5.705C3.62343 5.44217 3.67523 5.18192 3.77588 4.93912C3.87653 4.69632 4.02405 4.47575 4.21 4.29C4.39575 4.10405 4.61632 3.95653 4.85912 3.85588C5.10192 3.75523 5.36217 3.70343 5.625 3.70343C5.88783 3.70343 6.14808 3.75523 6.39088 3.85588C6.63368 3.95653 6.85425 4.10405 7.04 4.29L7.1 4.35C7.33568 4.58054 7.63502 4.73519 7.95941 4.794C8.28381 4.85282 8.61838 4.81312 8.92 4.68H9C9.29577 4.55324 9.54802 4.34276 9.72569 4.07447C9.90337 3.80618 9.99872 3.49179 10 3.17V3C10 2.46957 10.2107 1.96086 10.5858 1.58579C10.9609 1.21071 11.4696 1 12 1C12.5304 1 13.0391 1.21071 13.4142 1.58579C13.7893 1.96086 14 2.46957 14 3V3.09C14.0013 3.41179 14.0966 3.72618 14.2743 3.99447C14.452 4.26276 14.7042 4.47324 15 4.6C15.3016 4.73312 15.6362 4.77282 15.9606 4.714C16.285 4.65519 16.5843 4.50054 16.82 4.27L16.88 4.21C17.0657 4.02405 17.2863 3.87653 17.5291 3.77588C17.7719 3.67523 18.0322 3.62343 18.295 3.62343C18.5578 3.62343 18.8181 3.67523 19.0609 3.77588C19.3037 3.87653 19.5243 4.02405 19.71 4.21C19.896 4.39575 20.0435 4.61632 20.1441 4.85912C20.2448 5.10192 20.2966 5.36217 20.2966 5.625C20.2966 5.88783 20.2448 6.14808 20.1441 6.39088C20.0435 6.63368 19.896 6.85425 19.71 7.04L19.65 7.1C19.4195 7.33568 19.2648 7.63502 19.206 7.95941C19.1472 8.28381 19.1869 8.61838 19.32 8.92V9C19.4468 9.29577 19.6572 9.54802 19.9255 9.72569C20.1938 9.90337 20.5082 9.99872 20.83 10H21C21.5304 10 22.0391 10.2107 22.4142 10.5858C22.7893 10.9609 23 11.4696 23 12C23 12.5304 22.7893 13.0391 22.4142 13.4142C22.0391 13.7893 21.5304 14 21 14H20.91C20.5882 14.0013 20.2738 14.0966 20.0055 14.2743C19.7372 14.452 19.5268 14.7042 19.4 15V15Z\" stroke=\"#656284\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                            </svg>\n                                            <p>Settings</p>\n                                        </div>\n                                    </div>\n                                </div>\n                                {/* <div className={styles['menu-btn']}>\n                                    <div></div>\n                                    <div></div>\n                                </div> */}\n                            </div>\n                            <MyPolls {...this.state} />\n                        </>\n                    }\n                    {\n                        this.state.is_loading &&\n                        <CircularProgress style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%,-50%)' }} />\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\n","import { Switch, BrowserRouter as Router, Route } from 'react-router-dom'\nimport Home from './Containers/Home';\nimport Vote from './Containers/Vote';\nimport Create from './Containers/Create';\nimport SignIn from './Containers/Signin'\nimport SignUp from './Containers/Signup'\nimport Dashboard from './Containers/Dashboard'\nimport { createTheme } from '@mui/material';\nimport { ThemeProvider } from '@emotion/react';\nimport { primary_color, secondary_color, Min_Percentage_of_FontSize, SERVER_URL } from './config';\nimport { setIsAuth as setAuth } from './Utils/utils';\nimport React from 'react';\nclass App extends React.Component {\n  theme = createTheme({\n    palette: {\n      mode: 'light',\n      primary:\n      {\n        main: primary_color\n      },\n      secondary:\n      {\n        main: secondary_color\n      }\n    }\n  })\n\n  componentDidMount() {\n      fetch(`${SERVER_URL}/is_auth`, { method: 'GET', credentials: 'include', mode: 'cors' }).then(fetch_res => fetch_res.json()).then(res_json => {\n        const is_auth = res_json.is_auth;\n        setAuth(is_auth);\n      }).catch(err=>{console.error(err)})\n    \n    this.handleFontSize()\n    window.addEventListener('resize', this.handleFontSize)\n  }\n\n  handleFontSize = () => {\n    let width = window.innerWidth;\n    if (width <= 1000) {\n      let per = Math.floor((width / 10) - 10);\n      if (per <= Min_Percentage_of_FontSize) { document.documentElement.style.fontSize = `${Min_Percentage_of_FontSize}%` }\n      else {\n        document.documentElement.style.fontSize = per.toString() + '%';\n      }\n    }\n  }\n\n\n  render(): React.ReactNode {\n    return (\n      <ThemeProvider theme={this.theme} >\n\n        <Router>\n          <Switch>\n              <Route path={'/vote'} component={Vote}></Route>\n            <Route path={'/share/vote' }   component={Vote}></Route>\n            <Route exact path={'/create'} component={Create}></Route>\n             <Route exact path={'/signin'} component={SignIn}></Route>\n            <Route exact path={'/signup'} component={SignUp}></Route>\n              <Route exact path={'/dashboard'} component={Dashboard}></Route>\n            <Route exact path={'/home'} component={Home}></Route>\n            <Route exact path={'/'} component={Home}></Route>\n\n          </Switch>\n        </Router>\n\n      </ThemeProvider>\n\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"dashboard_container__2dr1Z\",\"wrapper\":\"dashboard_wrapper__1-ucN\",\"menu-container\":\"dashboard_menu-container__6pOW0\",\"menu\":\"dashboard_menu__3GBmj\",\"menu-item\":\"dashboard_menu-item__ngSha\",\"menu-btn\":\"dashboard_menu-btn__wogDn\",\"center-container\":\"dashboard_center-container__1luvp\",\"center-wrapper\":\"dashboard_center-wrapper__2va_D\",\"center-top\":\"dashboard_center-top__2UzkP\",\"overall-container\":\"dashboard_overall-container__29BJ9\",\"overall-wrapper\":\"dashboard_overall-wrapper__cY-gC\",\"poll-search\":\"dashboard_poll-search__3ToNw\",\"poll-status-table-container\":\"dashboard_poll-status-table-container__1F5qn\",\"poll-status-table\":\"dashboard_poll-status-table__3uP1T\",\"no-data-container\":\"dashboard_no-data-container__198Mi\",\"no-data-svg-animation-top\":\"dashboard_no-data-svg-animation-top__DSlGJ\",\"no-data-svg-animation-bottom\":\"dashboard_no-data-svg-animation-bottom__15yhf\",\"details-container\":\"dashboard_details-container__3GeAv\",\"details-wrapper\":\"dashboard_details-wrapper__12JH6\",\"poll-details\":\"dashboard_poll-details__3zNUS\",\"details-description\":\"dashboard_details-description__3pbAJ\",\"vote-chart\":\"dashboard_vote-chart__3PJmW\",\"poll-percentages\":\"dashboard_poll-percentages__3RKGm\",\"poll-details-overlay\":\"dashboard_poll-details-overlay__14auF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"vote_container__1AjvW\",\"wrapper\":\"vote_wrapper__Ct1Lu\",\"left\":\"vote_left__3v6_0\",\"title\":\"vote_title__3Tu2W\",\"question\":\"vote_question__2UqZp\",\"options-container\":\"vote_options-container__2BRn4\",\"left-bottom-buttons\":\"vote_left-bottom-buttons__7luKU\",\"option\":\"vote_option__2MUam\",\"option-top\":\"vote_option-top__w8wxZ\",\"option-bottom\":\"vote_option-bottom__3YRl8\",\"option-outerbar\":\"vote_option-outerbar__Yzk2L\",\"option-innerbar\":\"vote_option-innerbar__1qifD\",\"right\":\"vote_right__2CviD\",\"right-top\":\"vote_right-top__-VyZ_\",\"right-bottom\":\"vote_right-bottom__1hZGT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"create_container__3oCDS\",\"wrapper\":\"create_wrapper__ZGh1a\",\"circle-right\":\"create_circle-right__3Dg0i\",\"circle-left\":\"create_circle-left__AzG60\",\"left\":\"create_left__wW1X1\",\"advanced-options\":\"create_advanced-options__rM7ne\",\"option-number\":\"create_option-number__19tjm\",\"right\":\"create_right__3D-9x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"home_container__3e_hB\",\"top\":\"home_top__2nsoJ\",\"action-btns-container\":\"home_action-btns-container__2E-UT\",\"features-container\":\"home_features-container__3AW8e\",\"top-right-image\":\"home_top-right-image__fYYMW\",\"bottom\":\"home_bottom__3cGS5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"styles_logo__3cKcF\",\"container\":\"styles_container__2oyZY\",\"bar-1\":\"styles_bar-1__1BMPA\",\"animation\":\"styles_animation__ST-CD\",\"bar-2\":\"styles_bar-2__1N_JJ\",\"bar-3\":\"styles_bar-3__23G03\"};"],"sourceRoot":""}